{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nclaw_motor = Motor(Ports.PORT7, GearSetting.RATIO_18_1, False)\narm_motor = Motor(Ports.PORT19, GearSetting.RATIO_18_1, False)\ncontroller_1 = Controller(PRIMARY)\nback = Motor(Ports.PORT3, GearSetting.RATIO_18_1, False)\nright = Motor(Ports.PORT2, GearSetting.RATIO_18_1, True)\nfront = Motor(Ports.PORT1, GearSetting.RATIO_18_1, False)\nleft = Motor(Ports.PORT4, GearSetting.RATIO_18_1, False)\nintake = Motor(Ports.PORT20, GearSetting.RATIO_18_1, False)\nlimit = Limit(brain.three_wire_port.b)\ngyro = Gyro(brain.three_wire_port.c)\ninertial = Inertial(Ports.PORT6)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait(200, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n#endregion VEXcode Generated Robot Configuration\n\n# ----------------------------------------------------------------------------\n#                                                                            \n#    Project:        Clawbot Controller with Events\n#    Description:    This example will use Controller button events to \n#                    control the V5 Clawbot arm and claw\n#    Configuration:  V5 Clawbot (Individual Motors)\n#                    Controller\n#                    Claw Motor in Port 3\n#                    Arm Motor in Port 8\n#                    Left Motor in Port 1\n#                    Right Motor in Port 10         \n#                                                                            \n# ----------------------------------------------------------------------------\n\n# Library imports\nfrom vex import *\n\n# Create Controller callback events - 15 msec delay to ensure events get registered\n\ndef pre_autonomous():\n    # actions to do when the program starts\n    brain.screen.clear_screen()\n    brain.screen.print(\"pre auton code\")\n    arm_motor.set_stopping(HOLD)\n    claw_motor.set_stopping(HOLD)\n    arm_motor.set_velocity(60, PERCENT)                                  \n    claw_motor.set_velocity(30, PERCENT)\n    intake.set_velocity(100, PERCENT)\n    left.set_velocity(70,PERCENT)\n    right.set_velocity(80,PERCENT)\n    back.set_velocity(70,PERCENT)\n    front.set_velocity(70,PERCENT)\n    wait(1, SECONDS)\n\ndef autonomous():\n    brain.screen.clear_screen()\n    brain.screen.print(\"autonomous code\")\n    # place automonous code here\n    while True:\n        left.spin_for(FORWARD, 3,TURNS,wait=False)\n        right.spin_for(FORWARD, 3,TURNS,wait=False)\n        wait(4,SECONDS)\n        left.spin_for(FORWARD, .8,TURNS,wait=False)\n        right.spin_for(REVERSE,.8,TURNS,wait=False)\n        wait(5,SECONDS)\n        left.spin_for(FORWARD, 3,TURNS,wait=False)\n        right.spin_for(FORWARD, 3,TURNS,wait=False)\n        intake.spin_for(REVERSE,5,TURNS,wait=False)\n        wait(2,SECONDS)\n        left.spin_for(REVERSE, .3,TURNS,wait=False)\n        right.spin_for(REVERSE, .3,TURNS,wait=False)\n        wait(10,SECONDS)\ndef user_control():\n    brain.screen.clear_screen()\n    # place driver control in this while loop\n    left.set_velocity(100,PERCENT)\n    right.set_velocity(100,PERCENT)\n    back.set_velocity(100,PERCENT)\n    front.set_velocity(100,PERCENT)\n    while True:\n        right.set_velocity((controller_1.axis3.position() - controller_1.axis1.position()), PERCENT)\n        back.set_velocity((controller_1.axis1.position() - controller_1.axis4.position()), PERCENT)\n        right.spin(FORWARD)\n        back.spin(FORWARD)\n        left.set_velocity((controller_1.axis3.position() + controller_1.axis1.position()), PERCENT)\n        front.set_velocity((controller_1.axis1.position() + controller_1.axis4.position()), PERCENT)\n        left.spin(FORWARD)\n        front.spin(FORWARD)\n        if controller_1.buttonL1.pressing():\n            intake.spin(FORWARD)\n        elif controller_1.buttonR1.pressing():\n            intake.spin(REVERSE,)\n        else:\n            intake.stop()\n        wait(20, MSEC)\n\n# create competition instance\ncomp = Competition(user_control, autonomous)\npre_autonomous()","textLanguage":"python","rconfig":[{"port":[7],"name":"claw_motor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[19],"name":"arm_motor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[],"name":"controller_1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[3],"name":"back","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[2],"name":"right","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[1],"name":"front","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[4],"name":"left","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[20],"name":"intake","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[2],"name":"limit","customName":true,"deviceType":"LimitSwitch","deviceClass":"limit","setting":{"id":"partner"},"triportSourcePort":22},{"port":[3],"name":"gyro","customName":true,"deviceType":"Gyro","deviceClass":"gyro","setting":{"id":"partner"},"triportSourcePort":22},{"port":[6],"name":"inertial","customName":true,"deviceType":"Inertial","deviceClass":"inertial","setting":{"id":"partner"},"triportSourcePort":22}],"slot":2,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"3.0.3","minVersion":"3.0.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"target":"Physical"}